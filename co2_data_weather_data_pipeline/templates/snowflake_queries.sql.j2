-- Check if Storage Integration Exists
SHOW STORAGE INTEGRATIONS;

-- Only create if it doesn't exist
CREATE OR REPLACE STORAGE INTEGRATION CO2_S3_INTEGRATION
{% if not integration_exists %}
TYPE = EXTERNAL_STAGE
STORAGE_PROVIDER = 'S3'
STORAGE_AWS_ROLE_ARN = '{{ aws_role_arn }}'
ENABLED = TRUE
STORAGE_ALLOWED_LOCATIONS = ('{{ s3_bucket }}');
{% endif %}

-- Create Stage
CREATE OR REPLACE STAGE CO2_STAGE
STORAGE_INTEGRATION = CO2_S3_INTEGRATION
URL = '{{ s3_bucket }}';

-- Create File Format
CREATE OR REPLACE FILE FORMAT CO2_CSV_FORMAT
TYPE = CSV
FIELD_DELIMITER = ','
SKIP_HEADER = 1
NULL_IF = ('NULL', 'null', '')
EMPTY_FIELD_AS_NULL = TRUE;

-- Create Raw Data Table
CREATE OR REPLACE TABLE RAW_DOW30_STAGING (
    YEAR INT,
    MONTH INT,
    DAY INT,
    DECIMAL_DATE FLOAT,
    CO2_EMISSION FLOAT
);

-- Copy Data from S3 to Staging Table
COPY INTO RAW_DOW30_STAGING
FROM @CO2_STAGE/co2_data/co2_dataset_2.csv
FILE_FORMAT = (FORMAT_NAME = 'CO2_CSV_FORMAT')
FORCE = TRUE;

-- Create Harmonized Table
CREATE OR REPLACE TABLE DOW30_HARMONIZED AS
SELECT YEAR, MONTH, DAY, DECIMAL_DATE, CO2_EMISSION FROM RAW_DOW30_STAGING;

-- Add Normalized Column
ALTER TABLE DOW30_HARMONIZED ADD COLUMN NORMALIZED_CO2 FLOAT;

-- Insert Normalized Data
INSERT INTO DOW30_HARMONIZED (YEAR, MONTH, DAY, CO2_EMISSION, NORMALIZED_CO2)
SELECT 
    YEAR, 
    MONTH, 
    DAY, 
    CO2_EMISSION,
    CO2_EMISSION / 400.0 AS NORMALIZED_CO2
FROM RAW_DOW30_STAGING;
